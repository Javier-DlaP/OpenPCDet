2021-04-26 01:44:01,064   INFO  **********************Start logging**********************
2021-04-26 01:44:01,064   INFO  CUDA_VISIBLE_DEVICES=ALL
2021-04-26 01:44:01,064   INFO  cfg_file         cfgs/nuscenes_models_2/pointpillar.yaml
2021-04-26 01:44:01,064   INFO  batch_size       2
2021-04-26 01:44:01,064   INFO  epochs           80
2021-04-26 01:44:01,064   INFO  workers          8
2021-04-26 01:44:01,064   INFO  extra_tag        default
2021-04-26 01:44:01,064   INFO  ckpt             ../output/nuscenes_models_2/pointpillar/default/ckpt/checkpoint_epoch_9.pth
2021-04-26 01:44:01,064   INFO  pretrained_model None
2021-04-26 01:44:01,064   INFO  launcher         none
2021-04-26 01:44:01,064   INFO  tcp_port         18888
2021-04-26 01:44:01,064   INFO  sync_bn          False
2021-04-26 01:44:01,064   INFO  fix_random_seed  False
2021-04-26 01:44:01,064   INFO  ckpt_save_interval 1
2021-04-26 01:44:01,064   INFO  local_rank       0
2021-04-26 01:44:01,064   INFO  max_ckpt_save_num 30
2021-04-26 01:44:01,064   INFO  merge_all_iters_to_one_epoch False
2021-04-26 01:44:01,064   INFO  set_cfgs         None
2021-04-26 01:44:01,064   INFO  max_waiting_mins 0
2021-04-26 01:44:01,064   INFO  start_epoch      0
2021-04-26 01:44:01,064   INFO  save_to_file     False
2021-04-26 01:44:01,064   INFO  cfg.ROOT_DIR: /home/javier/OpenPCDet
2021-04-26 01:44:01,064   INFO  cfg.LOCAL_RANK: 0
2021-04-26 01:44:01,064   INFO  cfg.CLASS_NAMES: ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']
2021-04-26 01:44:01,064   INFO  
cfg.DATA_CONFIG = edict()
2021-04-26 01:44:01,064   INFO  cfg.DATA_CONFIG.DATASET: NuScenesDataset
2021-04-26 01:44:01,064   INFO  cfg.DATA_CONFIG.DATA_PATH: /media/javier/HDD_linux/data/nuscenes
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.VERSION: v1.0-trainval
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.MAX_SWEEPS: 1
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.PRED_VELOCITY: True
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.SET_NAN_VELOCITY_TO_ZEROS: True
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.FILTER_MIN_POINTS_IN_GT: 1
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [-34.56, -39.68, -3, 34.56, 39.68, 1]
2021-04-26 01:44:01,065   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-04-26 01:44:01,065   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['nuscenes_infos_10sweeps_train.pkl']
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['nuscenes_infos_10sweeps_val.pkl']
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-04-26 01:44:01,065   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': False, 'DB_INFO_PATH': ['nuscenes_dbinfos_10sweeps_withvelo.pkl'], 'PREPARE': {'filter_by_min_points': ['car:5', 'truck:5', 'construction_vehicle:5', 'bus:5', 'trailer:5', 'barrier:5', 'motorcycle:5', 'bicycle:5', 'pedestrian:5', 'traffic_cone:5']}, 'SAMPLE_GROUPS': ['car:2', 'truck:3', 'construction_vehicle:7', 'bus:4', 'trailer:6', 'barrier:2', 'motorcycle:6', 'bicycle:6', 'pedestrian:2', 'traffic_cone:2'], 'NUM_POINT_FEATURES': 5, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-04-26 01:44:01,065   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['y', 'y', 'z', 'intensity']
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity', 'timestamp']
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-04-26 01:44:01,065   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/nuscenes_dataset_2.yaml
2021-04-26 01:44:01,065   INFO  
cfg.MODEL = edict()
2021-04-26 01:44:01,065   INFO  cfg.MODEL.NAME: PointPillar
2021-04-26 01:44:01,065   INFO  
cfg.MODEL.VFE = edict()
2021-04-26 01:44:01,065   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-04-26 01:44:01,065   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-04-26 01:44:01,065   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-04-26 01:44:01,065   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-04-26 01:44:01,065   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-04-26 01:44:01,065   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-04-26 01:44:01,065   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-04-26 01:44:01,065   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-04-26 01:44:01,065   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-04-26 01:44:01,065   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-04-26 01:44:01,065   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-04-26 01:44:01,065   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-04-26 01:44:01,065   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-04-26 01:44:01,066   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-04-26 01:44:01,066   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-04-26 01:44:01,066   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'car', 'anchor_sizes': [[4.63, 1.97, 1.74]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.95], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'truck', 'anchor_sizes': [[6.93, 2.51, 2.84]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.55, 'unmatched_threshold': 0.4}, {'class_name': 'construction_vehicle', 'anchor_sizes': [[6.37, 2.85, 3.19]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.225], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'bus', 'anchor_sizes': [[10.5, 2.94, 3.47]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.085], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.55, 'unmatched_threshold': 0.4}, {'class_name': 'trailer', 'anchor_sizes': [[12.29, 2.9, 3.87]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [0.115], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'barrier', 'anchor_sizes': [[0.5, 2.53, 0.98]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.33], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.55, 'unmatched_threshold': 0.4}, {'class_name': 'motorcycle', 'anchor_sizes': [[2.11, 0.77, 1.47]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.085], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.3}, {'class_name': 'bicycle', 'anchor_sizes': [[1.7, 0.6, 1.28]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.18], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'pedestrian', 'anchor_sizes': [[0.73, 0.67, 1.77]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.935], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.4}, {'class_name': 'traffic_cone', 'anchor_sizes': [[0.41, 0.41, 1.07]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.285], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.4}]
2021-04-26 01:44:01,066   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-04-26 01:44:01,066   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-04-26 01:44:01,066   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-04-26 01:44:01,066   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-04-26 01:44:01,066   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-04-26 01:44:01,066   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-04-26 01:44:01,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-04-26 01:44:01,066   INFO  
cfg.OPTIMIZATION = edict()
2021-04-26 01:44:01,066   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-04-26 01:44:01,066   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-04-26 01:44:01,067   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-04-26 01:44:01,067   INFO  cfg.TAG: pointpillar
2021-04-26 01:44:01,067   INFO  cfg.EXP_GROUP_PATH: nuscenes_models_2
2021-04-26 01:44:03,516   INFO  Database filter by min points car: 339949 => 294532
2021-04-26 01:44:03,526   INFO  Database filter by min points truck: 65262 => 60344
2021-04-26 01:44:03,527   INFO  Database filter by min points construction_vehicle: 11050 => 10589
2021-04-26 01:44:03,529   INFO  Database filter by min points bus: 12286 => 11619
2021-04-26 01:44:03,531   INFO  Database filter by min points trailer: 19202 => 17934
2021-04-26 01:44:03,543   INFO  Database filter by min points barrier: 107507 => 101993
2021-04-26 01:44:03,544   INFO  Database filter by min points motorcycle: 8846 => 8055
2021-04-26 01:44:03,545   INFO  Database filter by min points bicycle: 8185 => 7531
2021-04-26 01:44:03,563   INFO  Database filter by min points pedestrian: 161928 => 148520
2021-04-26 01:44:03,570   INFO  Database filter by min points traffic_cone: 62964 => 55504
2021-04-26 01:44:03,637   INFO  Loading NuScenes dataset
2021-04-26 01:44:06,978   INFO  Total samples for NuScenes dataset: 28130
2021-04-26 01:44:10,219   INFO  ==> Loading parameters from checkpoint ../output/nuscenes_models_2/pointpillar/default/ckpt/checkpoint_epoch_9.pth to CPU
2021-04-26 01:44:10,338   INFO  ==> Loading optimizer parameters from checkpoint ../output/nuscenes_models_2/pointpillar/default/ckpt/checkpoint_epoch_9.pth to CPU
2021-04-26 01:44:10,359   INFO  ==> Done
2021-04-26 01:44:10,361   INFO  PointPillar(
  (vfe): PillarVFE(
    (pfn_layers): ModuleList(
      (0): PFNLayer(
        (linear): Linear(in_features=10, out_features=64, bias=False)
        (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      )
    )
  )
  (backbone_3d): None
  (map_to_bev_module): PointPillarScatter()
  (pfe): None
  (backbone_2d): BaseBEVBackbone(
    (blocks): ModuleList(
      (0): Sequential(
        (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
        (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
      )
      (1): Sequential(
        (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
        (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
      (2): Sequential(
        (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
        (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
    )
    (deblocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): Sequential(
        (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
  )
  (dense_head): AnchorHeadSingle(
    (cls_loss_func): SigmoidFocalClassificationLoss()
    (reg_loss_func): WeightedSmoothL1Loss()
    (dir_loss_func): WeightedCrossEntropyLoss()
    (conv_cls): Conv2d(384, 200, kernel_size=(1, 1), stride=(1, 1))
    (conv_box): Conv2d(384, 140, kernel_size=(1, 1), stride=(1, 1))
    (conv_dir_cls): Conv2d(384, 40, kernel_size=(1, 1), stride=(1, 1))
  )
  (point_head): None
  (roi_head): None
)
2021-04-26 01:44:10,362   INFO  **********************Start training nuscenes_models_2/pointpillar(default)**********************
